name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    env:
      RUN_NEO4J_SLICE: ${{ vars.RUN_NEO4J_SLICE || 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run tests
        run: pytest

      - name: Build wheel
        run: |
          python -m pip install build
          scripts/build-wheel.sh dist/release

      - name: Build docker image
        run: scripts/build-image.sh duskmantle/km:${{ github.ref_name }}

      - name: Push image to GHCR
        env:
          OWNER: ${{ github.repository_owner }}
          TAG: ${{ github.ref_name }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          set -euo pipefail
          owner_lc=$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')
          image="ghcr.io/${owner_lc}/duskmantle-km:${TAG}"
          token="$GHCR_TOKEN"
          if [ -z "$token" ]; then
            token="${{ secrets.GITHUB_TOKEN }}"
          fi
          echo "$token" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker tag duskmantle/km:${TAG} "$image"
          docker push "$image"

      - name: Generate checksums
        run: |
          scripts/checksums.sh dist/release dist/SHA256SUMS
          scripts/checksums.sh dist dist/IMAGE_SHA256SUMS

      - name: Smoke test container
        run: ./infra/smoke-test.sh duskmantle/km:${{ github.ref_name }}

      - name: Run MCP smoke tests
        run: pytest -m mcp_smoke --maxfail=1 --disable-warnings

      - name: Optional Neo4j integration slice
        if: env.RUN_NEO4J_SLICE == 'true'
        env:
          NEO4J_TEST_URI: bolt://localhost:7687
          NEO4J_TEST_USER: neo4j
          NEO4J_TEST_PASSWORD: neo4jadmin
          NEO4J_TEST_DATABASE: knowledge
          KM_NEO4J_DATABASE: knowledge
        run: |
          set -euo pipefail
          docker run --rm -d --name km-gateway-ci \
            -p 8000:8000 -p 7687:7687 -p 6333:6333 \
            -e KM_GRAPH_AUTO_MIGRATE=true \
            -e KM_NEO4J_PASSWORD=${NEO4J_TEST_PASSWORD} \
            duskmantle/km:${{ github.ref_name }}
          trap 'docker rm -f km-gateway-ci >/dev/null 2>&1 || true' EXIT
          for i in {1..60}; do
            if curl -fsS http://localhost:8000/readyz >/dev/null; then
              break
            fi
            sleep 5
          done
          pytest -m neo4j -ra

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          draft: true
          files: |
            dist/release/*.whl
            dist/SHA256SUMS
            dist/IMAGE_SHA256SUMS
            CHANGELOG.md
