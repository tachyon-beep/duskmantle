name: Neo4j Integration Tests

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "30 3 * * *"

jobs:
  neo4j-tests:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: duskmantle/km:${{ github.sha }}
      KM_ADMIN_TOKEN: maintainer-token
      KM_NEO4J_PASSWORD: CiNeo4jPass123!
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install -e .[dev]

      - name: Install Node dependencies
        run: npm ci

      - name: Install Playwright browsers (CI only)
        run: npx playwright install chromium

      - name: Free disk space for Docker build
        run: |
          set -euxo pipefail
          df -h
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"/CodeQL || true
          docker system prune -af || true
          df -h

      - name: Build container image
        run: docker build --network=host -t "$IMAGE_TAG" .

      - name: Start Qdrant dependency
        run: |
          set -euxo pipefail
          docker rm -f km-ci-qdrant || true
          docker run -d --name km-ci-qdrant --network host qdrant/qdrant:v1.15.5
          for i in {1..60}; do
            if curl -fsS http://127.0.0.1:6333/healthz >/dev/null 2>&1; then
              exit 0
            fi
            sleep 2
          done
          echo "Qdrant failed to become ready" >&2
          docker logs km-ci-qdrant || true
          exit 1

      - name: Start Neo4j dependency
        run: |
          set -euxo pipefail
          docker rm -f km-ci-neo4j || true
          docker run -d --name km-ci-neo4j \
            --network host \
            -e NEO4J_AUTH=neo4j/${KM_NEO4J_PASSWORD} \
            neo4j:5.26.0
          for i in {1..60}; do
            if docker exec km-ci-neo4j cypher-shell -u neo4j -p ${KM_NEO4J_PASSWORD} "SHOW DATABASES" >/dev/null 2>&1; then
              exit 0
            fi
            sleep 2
          done
          echo "Neo4j failed to become ready" >&2
          docker logs km-ci-neo4j || true
          exit 1

      - name: Launch gateway container
        run: |
          docker run -d --name km-integration \
            --network host \
            -e KM_ADMIN_TOKEN="$KM_ADMIN_TOKEN" \
            -e KM_NEO4J_PASSWORD="${KM_NEO4J_PASSWORD}" \
            -e KM_NEO4J_URI="bolt://127.0.0.1:7687" \
            -e KM_QDRANT_URL="http://127.0.0.1:6333" \
            "$IMAGE_TAG"

      - name: Wait for gateway readiness
        run: |
          set -euo pipefail
          for i in {1..60}; do
            if docker exec km-integration curl -fsS http://127.0.0.1:8000/readyz >/dev/null; then
              exit 0
            fi
            sleep 5
          done
          echo "Gateway failed to become ready" >&2
          docker logs km-integration || true
          exit 1

      - name: Run Neo4j integration tests
        env:
          NEO4J_TEST_URI: bolt://127.0.0.1:7687
          NEO4J_TEST_PASSWORD: ${{ env.KM_NEO4J_PASSWORD }}
          KM_ADMIN_TOKEN: ${{ env.KM_ADMIN_TOKEN }}
        run: |
          set -euxo pipefail
          . .venv/bin/activate
          pytest -m neo4j -ra

      - name: Run MCP smoke tests
        run: |
          . .venv/bin/activate
          pytest -m mcp_smoke --maxfail=1 --disable-warnings

      - name: Run TypeScript lint
        run: npm run lint:ts

      - name: Run Playwright UI smoke tests
        run: |
          . .venv/bin/activate
          npx playwright test

      - name: Tear down containers
        if: always()
        run: |
          docker rm -f km-integration || true
          docker rm -f km-ci-neo4j || true
          docker rm -f km-ci-qdrant || true
