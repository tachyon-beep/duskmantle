#!/usr/bin/env bash
set -euo pipefail

usage() {
  cat <<'USAGE'
Usage: km-run [--detach]

Launch the Duskmantle stack via docker compose. Expects a compose file and
gateway.env generated by bin/km-bootstrap (or managed manually).

Environment overrides:
  KM_IMAGE             Gateway API image tag (default: duskmantle/km:dev)
  KM_QDRANT_IMAGE      Qdrant image tag (default: qdrant/qdrant:1.15.4)
  KM_NEO4J_IMAGE       Neo4j image tag (default: neo4j:5.26.0)
  KM_COMPOSE_DIR       Directory containing docker-compose.yml (default: ./.duskmantle/compose)
  KM_COMPOSE_FILE      Override compose file path
  KM_COMPOSE_PROJECT   Compose project name (default: duskmantle)
USAGE
}

DETACH=""
if [[ ${1:-} == "--help" ]]; then
  usage
  exit 0
elif [[ ${1:-} == "--detach" ]]; then
  DETACH="-d"
  shift
fi

if [[ $# -ne 0 ]]; then
  usage >&2
  exit 1
fi

if ! command -v docker >/dev/null 2>&1; then
  echo "docker command not found" >&2
  exit 1
fi

if ! docker compose version >/dev/null 2>&1; then
  echo "docker compose plugin is required" >&2
  exit 1
fi

BASE_DIR=$(pwd)/.duskmantle
COMPOSE_DIR=${KM_COMPOSE_DIR:-$BASE_DIR/compose}
COMPOSE_FILE=${KM_COMPOSE_FILE:-$COMPOSE_DIR/docker-compose.yml}
ENV_FILE=${KM_ENV_FILE:-$COMPOSE_DIR/gateway.env}
PROJECT=${KM_COMPOSE_PROJECT:-duskmantle}

mkdir -p "$COMPOSE_DIR" "$BASE_DIR"
mkdir -p "$COMPOSE_DIR/config/gateway" "$COMPOSE_DIR/config/neo4j" "$COMPOSE_DIR/config/qdrant" "$COMPOSE_DIR/repo"
mkdir -p "$COMPOSE_DIR/config/neo4j/data" "$COMPOSE_DIR/config/neo4j/logs"

if [[ ! -f "$COMPOSE_FILE" ]]; then
  echo "Compose file missing at $COMPOSE_FILE. Copying sample configuration." >&2
  cp infra/examples/docker-compose.sample.yml "$COMPOSE_FILE"
fi

if [[ ! -f "$ENV_FILE" ]]; then
  echo "Environment file missing at $ENV_FILE. Run bin/km-bootstrap to generate credentials." >&2
  exit 1
fi

# Export values from gateway.env for compose interpolation.
while IFS='=' read -r key value; do
  [[ -z "$key" || "$key" =~ ^# ]] && continue
  export "$key"="$value"
done < <(grep -v '^#' "$ENV_FILE")

export KM_IMAGE="${KM_IMAGE:-duskmantle/km:dev}"
export KM_QDRANT_IMAGE="${KM_QDRANT_IMAGE:-qdrant/qdrant:v1.15.5}"
export KM_NEO4J_IMAGE="${KM_NEO4J_IMAGE:-neo4j:5.26.0}"

cd "$COMPOSE_DIR"

docker compose --project-name "$PROJECT" -f "$COMPOSE_FILE" up ${DETACH}
