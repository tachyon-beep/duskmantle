#!/usr/bin/env python3
"""Generate random UUID tokens for gateway auth exports."""

from __future__ import annotations

import argparse
import sys
import uuid


def main() -> int:
    parser = argparse.ArgumentParser(
        description="Generate UUID tokens ready to export as environment variables."
    )
    parser.add_argument(
        "names",
        nargs="*",
        default=["KM_READER_TOKEN", "KM_ADMIN_TOKEN"],
        help="Environment variable names to populate (default: reader + maintainer).",
    )
    parser.add_argument(
        "--plain",
        action="store_true",
        help="Only print the raw UUID values (one per line).",
    )
    args = parser.parse_args()

    for name in args.names:
        token = str(uuid.uuid4())
        if args.plain:
            print(token)
        else:
            print(f"export {name}='{token}'")
    return 0


if __name__ == "__main__":  # pragma: no cover - CLI entrypoint
    sys.exit(main())
