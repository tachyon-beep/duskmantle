[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "duskmantle-knowledge-gateway"
version = "1.0.0"
description = "Turnkey knowledge management gateway packaged with Qdrant and Neo4j"
readme = "README.md"
authors = [{ name = "John Morrissey", email = "john@foundryside.dev" }]
license = { text = "MIT" }
requires-python = ">=3.12"
dependencies = [
  "fastapi>=0.110",
  "uvicorn[standard]>=0.24",
  "pydantic>=2.6",
  "pydantic-settings>=2.2",
  "apscheduler>=3.10",
  "qdrant-client>=1.7",
  "neo4j>=5.14",
  "numpy>=1.26",
  "sentence-transformers>=2.2",
  "python-dotenv>=1.0",
  "rich>=13.7",
  "prometheus-client>=0.20",
  "fastmcp>=2.12",
  "httpx>=0.28",
  "python-json-logger>=2.0",
  "slowapi>=0.1.7",
  "limits>=3.9",
  "filelock>=3.12",
  "opentelemetry-api>=1.24",
  "opentelemetry-sdk>=1.24",
  "opentelemetry-exporter-otlp>=1.24",
  "opentelemetry-instrumentation-fastapi>=0.46b0",
  "opentelemetry-instrumentation-requests>=0.46b0",
]

[project.optional-dependencies]
dev = [
  "black>=24.2",
  "ruff>=0.3",
  "pytest>=8.1",
  "pytest-cov>=4.1",
  "pytest-asyncio>=0.23",
  "httpx>=0.27",
]

[project.scripts]
knowledge-gateway = "gateway.__main__:main"
gateway-mcp = "gateway.mcp.cli:main"
gateway-ingest = "gateway.ingest.cli:main"
gateway-graph = "gateway.graph.cli:main"
gateway-search = "gateway.search.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["gateway", "gateway.*"]

[tool.pytest.ini_options]
addopts = "-ra"
testpaths = ["tests"]
markers = [
  "neo4j: integration tests that require a running Neo4j instance",
  "mcp_smoke: minimal MCP smoke coverage"
]

[tool.black]
line-length = 140
target-version = ["py312"]

[tool.ruff]
line-length = 140
src = ["gateway", "tests", "bin"]

[tool.ruff.lint]
select = ["E", "F", "B", "I", "UP", "Q", "W", "ANN"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["gateway"]

[tool.ruff.lint.per-file-ignores]
"bin/km-bootstrap" = ["ANN"]
"bin/km-watch" = ["ANN"]
